{
    "swagger": "2.0",
    "info": {
        "title": "OneTwoTrail 2.0 API definition",
        "version": "1.0.0",
        "description": "OweTwoTrail 2.0 API definition.",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth/email": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/AuthEmailLoginRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "200": {
                        "description": "Auth Success Response",
                        "schema": {
                            "$ref": "#/definitions/AuthSuccess"
                        }
                    }
                },
                "summary": "Login using email and password"
            }
        },
        "/auth/facebook": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/FacebookAuthPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "200": {
                        "description": "Facebook Auth Success Response",
                        "schema": {
                            "$ref": "#/definitions/AuthSuccess"
                        }
                    }
                },
                "summary": "Auth Using Facebook OAuth"
            }
        },
        "/auth/register": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "description": "Request Body\n\nUsed library to countries code standard used: https://datahub.io/core/country-list/r/0.html ISO 3166-1 alpha-2",
                        "schema": {
                            "$ref": "#/definitions/AuthRegisterPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "200": {
                        "description": "Register success response",
                        "schema": {
                            "$ref": "#/definitions/AuthSuccess"
                        }
                    }
                },
                "summary": "Register User"
            }
        },
        "/search": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "description": "Search with filters body",
                        "schema": {
                            "$ref": "#/definitions/SearchPayload"
                        },
                        "in": "body",
                        "required": true
                    },
                    {
                        "name": "q",
                        "description": "Search query parameter",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "description": "Pagination Token",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "description": "Pagination max reults",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Of Experiences",
                        "schema": {
                            "$ref": "#/definitions/PaginateExperiencesPart"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Search using term and apply search filter"
            }
        },
        "/search/filters": {
            "get": {
                "parameters": [
                    {
                        "name": "token",
                        "description": "Pagination token",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "description": "Pagination max results",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "200": {
                        "description": "Search filters result",
                        "schema": {
                            "$ref": "#/definitions/PaginateSearchFiltersResponse"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get search filters"
            }
        },
        "/topics/list": {
            "get": {
                "parameters": [
                    {
                        "name": "maxResults",
                        "description": "Pagination Offset",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "token",
                        "description": "Pagination Limit",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginate Topics Response",
                        "schema": {
                            "$ref": "#/definitions/PaginateTopicsResponse"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "BasicAuth": [
                        ]
                    }
                ],
                "summary": "Get Topics"
            }
        },
        "/account/password": {
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdatePasswordPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Updated password response"
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Change authenticated user password"
            }
        },
        "/auth/forgotPassword/": {
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "description": "Change password using a code body",
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordWithCodePayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Password changed",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "BasicAuth": [
                        ]
                    }
                ],
                "summary": "Change password using a code"
            },
            "patch": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ForgotPasswordPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Forgot password request accepted",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "BasicAuth": [
                        ]
                    }
                ],
                "summary": "Forgot password requested"
            }
        },
        "/discovery": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Discovery result data",
                        "schema": {
                            "$ref": "#/definitions/DiscoveryResponse"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get discovery section data",
                "description": "Get discovery data to render app discovery section"
            }
        },
        "/account/profile": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Account profile",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get account profile"
            },
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "204": {
                        "description": "Updated profile succesfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "summary": "Update account profile"
            }
        },
        "/trails": {
            "get": {
                "parameters": [
                    {
                        "name": "token",
                        "description": "Pagination token",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "description": "Pagination max results",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List User Trails",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaginateFeaturedTrailsResponse"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get user trails"
            },
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateUserTrailPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Create user trail response",
                        "schema": {
                            "$ref": "#/definitions/Trail"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Create User Trail"
            }
        },
        "/experiences/": {
            "get": {
                "parameters": [
                    {
                        "name": "maxResults",
                        "description": "Pagination max results",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "token",
                        "description": "Pagination token",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of experiences",
                        "schema": {
                            "$ref": "#/definitions/PaginateExperiencesPart"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "List of experiences of current user"
            },
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Experience"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experience created response",
                        "schema": {
                            "$ref": "#/definitions/Experience"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Create experience"
            }
        },
        "/experiences/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Get experience by id",
                        "schema": {
                            "$ref": "#/definitions/Experience"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get experience by given id",
                "description": "Get experience by id"
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Updated experience response by the given id",
                        "schema": {
                            "$ref": "#/definitions/Experience"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Update experience by given id",
                "description": "Update experience"
            },
            "delete": {
                "responses": {
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "204": {
                        "description": "Delete experience response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Delete experience by given id"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "\nExperience id value",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/experiences/{id}/hide": {
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "description": "Hide Expirence Body",
                        "schema": {
                            "$ref": "#/definitions/Experience"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "204": {
                        "description": "Hide user experience response",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Hide User Experience"
            }
        },
        "/trails/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Get trail details response",
                        "schema": {
                            "$ref": "#/definitions/Trail"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "403": {
                        "description": "Not collaborator or owner",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get user trail"
            },
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Trail"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update trail response",
                        "schema": {
                            "$ref": "#/definitions/Trail"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Update user trail"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Trail delete response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Delete user trail"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/discovery/topics/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "token",
                        "description": "pagination token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "description": "Pagination max results",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discovery topic experiences",
                        "schema": {
                            "$ref": "#/definitions/PaginateExperiencesPart"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get discovery topic experiences"
            }
        },
        "/experiences/{id}/report": {
            "get": {
                "parameters": [
                    {
                        "name": "token",
                        "description": "Pagination Query",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "description": "Pagination max results",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report pagination",
                        "schema": {
                            "$ref": "#/definitions/PaginateReportsResponse"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get experience reports list"
            },
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Create report success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Report experience"
            }
        },
        "/trails/{id}/itinerary": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Get trail itinerary",
                        "schema": {
                            "$ref": "#/definitions/Itinerary"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Get Trail Itinerary if is available"
            },
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/Itinerary"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update itinerary response",
                        "schema": {
                            "$ref": "#/definitions/Itinerary"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Update itinerary"
            },
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "description": "Create itinerary payload",
                        "schema": {
                            "$ref": "#/definitions/CreateItineraryPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create itinerary response",
                        "schema": {
                            "$ref": "#/definitions/Itinerary"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Create trail itinerary"
            }
        },
        "/trails/{id}/itinerary/recommends": {
            "get": {
                "parameters": [
                    {
                        "name": "token",
                        "description": "Pagination token",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "maxResults",
                        "description": "Pagination max result",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "selectedTag",
                        "description": "Selected tag value",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Load more iterary recommends by tag response\n",
                        "schema": {
                            "$ref": "#/definitions/ItineraryRecommendsObject"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Load more iterary recommends by tag",
                "description": "Load more iterary recommends by tag \n\n"
            }
        },
        "/account/topics/": {
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UpdateUserTopicsPayload"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Updated user topics success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "400": {
                        "$ref": "#/responses/bad_request"
                    }
                },
                "security": [
                    {
                        "Bearer": [
                        ]
                    }
                ],
                "summary": "Update user topics"
            }
        }
    },
    "definitions": {
        "Error": {
            "title": "Root Type for Error",
            "description": "Error Response Object",
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "example": {
                "code": "400",
                "message": "Bad Request"
            }
        },
        "AuthSuccess": {
            "title": "Root Type for AuthSuccess",
            "description": "Authentication Succesfully Response",
            "required": [
                "select_country"
            ],
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "pick_topics": {
                    "type": "boolean"
                },
                "select_country": {
                    "description": "",
                    "type": "boolean"
                }
            },
            "example": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                "pick_topics": false,
                "select_country": false
            }
        },
        "AuthEmailLoginRequest": {
            "title": "Root Type for AuthEmailLoginRequest",
            "description": "Authentication email login request payload",
            "required": [
                "password",
                "email"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string"
                },
                "password": {
                    "format": "password",
                    "description": "Hash of password",
                    "type": "string"
                }
            },
            "example": {
                "email": "example@example.com",
                "password": "$pcks$64,10000,64$530f8afbc74536b9a963b4f1c4cb738bcea7403d4d606b6e074ec5d3baf39d18$56158864e365bd78f6afda27f9a239bcb3f2b7a4773d4c0d0858c86266119d1e35aae9ca1a4777ed3d85c42caeed0c57cc7e09fe7d152d5d4d4ee08506c2b41a"
            }
        },
        "FacebookAuthPayload": {
            "title": "Root Type for FacebookOAuthPayload",
            "description": "Facebook Auth Body Payload",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            },
            "example": {
                "access_token": "token"
            }
        },
        "AuthRegisterPayload": {
            "title": "Root Type for AuthRegisterPayload",
            "description": "Register User Body Payload",
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "password": {
                    "format": "password",
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "example": {
                "displayName": "example",
                "email": "example@example.com",
                "countryCode": "CR",
                "password": "12345678",
                "topics": [
                    0,
                    1
                ]
            }
        },
        "Experience": {
            "title": "Root Type for Experience",
            "description": "Experience Object",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "locality": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "address-line1": {
                    "type": "string"
                },
                "address-line2": {
                    "type": "string"
                },
                "address-line3": {
                    "type": "string"
                },
                "address-line4": {
                    "type": "string"
                },
                "likes_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "starred": {
                    "type": "boolean"
                },
                "detail": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "latitude": {
                    "format": "int32",
                    "type": "integer"
                },
                "longitude": {
                    "format": "int32",
                    "type": "integer"
                },
                "nearby_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "related_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "example": {
                "id": 0,
                "name": "Manuel Antonio, Parque Nacional",
                "region": "Puntarenas",
                "locality": "Manuel Antonio",
                "country": "Costa Rica",
                "address-line1": "Address",
                "address-line2": "Address",
                "address-line3": "Address",
                "address-line4": "Address",
                "likes_count": 40,
                "starred": false,
                "detail": "Manuel Antonio is the most popular National Park with Ticos. It offers several kilometers of very well maintained trails",
                "image": "https://2.bp.blogspot.com/-he7gyDcaGdU/WFsfPqaiS9I/AAAAAAAAFzw/pqkGr5OCYikIA-Fsd_C2-FdoKTxVtx5zQCKgB/s1600/IMG_20161221_141133905.jpg",
                "latitude": 0,
                "longitude": 0,
                "nearby_ids": [
                    "naoasodasd909",
                    "ojnsdpgsd-0a",
                    "oasidgja0sdgadg09"
                ],
                "related_ids": [
                    "34tdgdsf45645",
                    "qr524524ter-0a",
                    "oasidgjasdfsdfasdfa0sdgadg09"
                ],
                "images": [
                    "https://upload.wikimedia.org/wikipedia/commons/0/0e/Pavilion_of_Ciudad_Quesada%2C_Costa_Rica_park.jpg",
                    "https://lh3.googleusercontent.com/proxy/ENtz38Rzl0Vyt-8ehmda7eWOW4bTjTDbntJLv6nChMKwJFr9dOHz9FFw-UveJkj0My5o9GWt4roilVmUh1bkpvYrkE8fsKucmKI2xzXcnxke3ffREm-dWnJXwwyuLrOdiRWA-5CLH9-bLEVDperRdlkQ3OOioKCu5rllRG1b6tz9cHh6VlGU_yZ5Ektw5xbefp77H_gZ2HdaOkOXMnKQTsoF4hXPndSdELHwHPcCjAB1VNcvctz61peXNPxP95ZYcVI3qRFRF7k",
                    "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTn9l50PRnci2bnQBLQqt3dgscfWf3QcKQ8bDdx6MZdF1m6w1j-&usqp=CAU",
                    "https://elperiodicocr.com/wp-content/uploads/2019/07/Feria-del-Agricultor-INDER-1.jpeg"
                ]
            }
        },
        "SearchPayload": {
            "title": "Root Type for SearchPayload",
            "description": "Search Body Payload",
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "component_type": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "selected_values": {
                                "type": "array",
                                "items": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "example": {
                "filters": [
                    {
                        "id": "id",
                        "component_type": "component_type",
                        "type": "type",
                        "selected_values": [
                            0,
                            1
                        ]
                    }
                ]
            }
        },
        "Topic": {
            "title": "Root Type for Topic",
            "description": "Topic Object",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                }
            },
            "example": {
                "id": "1",
                "name": "Nature",
                "image": "https://onetwotrailcr.github.io/v1/img/img1.jpg"
            }
        },
        "PaginateTopicsResponse": {
            "title": "Root Type for PaginateTopicsResponse",
            "description": "Topics list response",
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Topic"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "description": "Pagination Data"
                }
            },
            "example": {
                "entries": [
                    {
                        "id": "1",
                        "name": "Nature",
                        "image": "https://onetwotrailcr.github.io/v1/img/img1.jpg"
                    },
                    {
                        "id": "2",
                        "name": "Mountain",
                        "image": "https://onetwotrailcr.github.io/v1/img/img2.jpg"
                    },
                    {
                        "id": "3",
                        "name": "Beaches",
                        "image": "https://onetwotrailcr.github.io/v1/img/img3.jpg"
                    },
                    {
                        "id": "4",
                        "name": "Volunteering",
                        "image": "https://onetwotrailcr.github.io/v1/img/img4.jpg"
                    },
                    {
                        "id": "5",
                        "name": "Coffee",
                        "image": "https://onetwotrailcr.github.io/v1/img/img5.jpg"
                    },
                    {
                        "id": "6",
                        "name": "Gastronomy",
                        "image": "https://onetwotrailcr.github.io/v1/img/img6.jpg"
                    }
                ],
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "nextToken"
                }
            }
        },
        "ExperiencesListResponse": {
            "title": "Root Type for PaginateTopicsResponse",
            "description": "Topics list response",
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Experience"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "description": "Pagination data"
                }
            },
            "example": {
                "entries": [
                    {
                        "id": "omfsokdm012",
                        "name": "Manuel Antonio, Parque Nacional",
                        "region": "Puntarenas",
                        "locality": "Manuel Antonio",
                        "country": "Costa Rica",
                        "address-line1": "Address",
                        "address-line2": "Address",
                        "address-line3": "Address",
                        "address-line4": "Address",
                        "likes_count": 40,
                        "starred": false,
                        "detail": "Manuel Antonio is the most popular National Park with Ticos. It offers several kilometers of very well maintained trails",
                        "image": "https://2.bp.blogspot.com/-he7gyDcaGdU/WFsfPqaiS9I/AAAAAAAAFzw/pqkGr5OCYikIA-Fsd_C2-FdoKTxVtx5zQCKgB/s1600/IMG_20161221_141133905.jpg",
                        "latitude": 0,
                        "longitude": 0,
                        "nearby_ids": [
                            "naoasodasd909",
                            "ojnsdpgsd-0a",
                            "oasidgja0sdgadg09"
                        ],
                        "related_ids": [
                            "34tdgdsf45645",
                            "qr524524ter-0a",
                            "oasidgjasdfsdfasdfa0sdgadg09"
                        ],
                        "images": [
                            "https://upload.wikimedia.org/wikipedia/commons/0/0e/Pavilion_of_Ciudad_Quesada%2C_Costa_Rica_park.jpg",
                            "https://lh3.googleusercontent.com/proxy/ENtz38Rzl0Vyt-8ehmda7eWOW4bTjTDbntJLv6nChMKwJFr9dOHz9FFw-UveJkj0My5o9GWt4roilVmUh1bkpvYrkE8fsKucmKI2xzXcnxke3ffREm-dWnJXwwyuLrOdiRWA-5CLH9-bLEVDperRdlkQ3OOioKCu5rllRG1b6tz9cHh6VlGU_yZ5Ektw5xbefp77H_gZ2HdaOkOXMnKQTsoF4hXPndSdELHwHPcCjAB1VNcvctz61peXNPxP95ZYcVI3qRFRF7k",
                            "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTn9l50PRnci2bnQBLQqt3dgscfWf3QcKQ8bDdx6MZdF1m6w1j-&usqp=CAU",
                            "https://elperiodicocr.com/wp-content/uploads/2019/07/Feria-del-Agricultor-INDER-1.jpeg"
                        ]
                    }
                ],
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "token"
                }
            }
        },
        "BaseResponse": {
            "title": "Root Type for BaseResponse",
            "description": "Base App Response",
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            },
            "example": {
                "success": true
            }
        },
        "ForgotPasswordPayload": {
            "title": "Root Type for ForgotPasswordPayload",
            "description": "Forgor sassword payload",
            "required": [
                "emial"
            ],
            "type": "object",
            "properties": {
                "emial": {
                    "description": "Email",
                    "type": "string"
                }
            },
            "example": {
                "email": "email@example.com"
            }
        },
        "UpdatePasswordPayload": {
            "title": "Root Type for UpdatePasswordPayload",
            "description": "Update password body payload",
            "type": "object",
            "properties": {
                "old": {
                    "format": "password",
                    "type": "string"
                },
                "new": {
                    "format": "password",
                    "type": "string"
                }
            },
            "example": {
                "old": "112233333",
                "new": "q22222222"
            }
        },
        "ChangePasswordWithCodePayload": {
            "title": "Root Type for ChangePasswordWithCodePayload",
            "description": "Change user password using a code",
            "required": [
                "code",
                "newPassword"
            ],
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "newPassword": {
                    "format": "password",
                    "type": "string"
                }
            },
            "example": {
                "token": "5555",
                "newPassword": "929292929229"
            }
        },
        "Pagination": {
            "title": "Root Type for Pagination",
            "description": "App Pagination Object",
            "required": [
                "nextPageToken",
                "resultsPerPage"
            ],
            "type": "object",
            "properties": {
                "resultsPerPage": {
                    "format": "int32",
                    "type": "integer"
                },
                "nextPageToken": {
                    "type": "string"
                }
            },
            "example": {
                "resultsPerPage": 20,
                "nextPageToken": "nextToken"
            }
        },
        "Profile": {
            "title": "Root Type for Profile",
            "description": "User Profile",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "emial": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                }
            },
            "example": {
                "id": "id",
                "displayName": "Name",
                "email": "example@example.com",
                "phoneNumber": "+50688888888",
                "countryCode": "CR"
            }
        },
        "Trail": {
            "title": "Root Type for Trail",
            "description": "Trail Object",
            "required": [
                "experiences",
                "collaborators",
                "name",
                "authorId",
                "description",
                "status"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "description": "Trail name\n",
                    "type": "string"
                },
                "authorId": {
                    "format": "int32",
                    "description": "Id of the trail author",
                    "type": "integer"
                },
                "collaborators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "experiences": {
                    "$ref": "#/definitions/PaginateExperiencesPart",
                    "description": "Trail experiences response"
                },
                "description": {
                    "description": "Trail small description",
                    "type": "string"
                },
                "status": {
                    "description": "Trail current status",
                    "enum": [
                        "OPEN",
                        "IN_PROGRESS",
                        "PAUSED",
                        "CANCELLED",
                        "CLOSED",
                        "DONE"
                    ],
                    "type": "string"
                }
            },
            "example": {
                "name": "Trail Name",
                "description": "",
                "authorId": 0,
                "collaborators": [
                ],
                "status": "OPEN",
                "experiences": {

                }
            }
        },
        "FeaturedTrail": {
            "title": "Root Type for FeaturedTrail",
            "description": "A group of predefined experiences. (Group images, Name, Description, Id)",
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "description": "Trail Status",
                    "enum": [
                        "OPEN",
                        "IN_PROGRESS",
                        "PAUSED",
                        "CANCELLED",
                        "CLOSED",
                        "DONE"
                    ],
                    "type": "string"
                }
            },
            "example": {
                "images": [
                ],
                "name": "Name",
                "id": 0,
                "status": "OPEN"
            }
        },
        "DiscoveryResponse": {
            "title": "Root Type for DiscoveryResponse",
            "description": "Discovery response object",
            "type": "object",
            "properties": {
                "topicsExpirences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaginateDiscoveryTopicResponse"
                    }
                },
                "featuredTrails": {
                    "$ref": "#/definitions/PaginateFeaturedTrailsResponse"
                }
            },
            "example": {
                "topicsExpirences": [
                    {
                        "name": "Name",
                        "description": "Description",
                        "topicId": 0,
                        "data": {
                            "entries": [
                                {
                                    "id": 0,
                                    "name": "Name",
                                    "topImage": "",
                                    "images": [
                                        ""
                                    ],
                                    "lat": 0,
                                    "lng": 0,
                                    "address": ""
                                },
                                {
                                    "id": 1,
                                    "name": "Name",
                                    "topImage": "",
                                    "images": [
                                        ""
                                    ],
                                    "lat": 0,
                                    "lng": 0,
                                    "address": ""
                                }
                            ],
                            "pagination": {
                                "resultsPerPage": 20,
                                "nextPageToken": "nextToken"
                            }
                        }
                    },
                    {
                        "name": "Name",
                        "description": "Description",
                        "topicId": 2,
                        "data": {
                            "entries": [
                                {
                                    "id": 0,
                                    "name": "Name",
                                    "topImage": "",
                                    "images": [
                                        ""
                                    ],
                                    "lat": 0,
                                    "lng": 0,
                                    "address": ""
                                },
                                {
                                    "id": 1,
                                    "name": "Name",
                                    "topImage": "",
                                    "images": [
                                        ""
                                    ],
                                    "lat": 0,
                                    "lng": 0,
                                    "address": ""
                                }
                            ],
                            "pagination": {
                                "resultsPerPage": 20,
                                "nextPageToken": "nextToken"
                            }
                        }
                    }
                ],
                "featuredTrails": {
                    "entries": [
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 0
                        },
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 1
                        },
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 2
                        }
                    ],
                    "pagination": {
                        "resultsPerPage": 20,
                        "nextPageToken": "nextToken"
                    }
                }
            }
        },
        "TopicExperiencesTrail": {
            "title": "Root Type for FeaturedTrail",
            "description": "A group of predefined experiences. (Group images, Name, Description, Id)",
            "type": "object",
            "properties": {
                "experiencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Experience"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "pagination": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pagination"
                    }
                }
            },
            "example": {
                "experiencies": [
                ],
                "name": "Name",
                "description": " Description",
                "id": 0,
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "nextToken"
                }
            }
        },
        "MyTrails": {
            "description": "My Trails Section Data Response ",
            "required": [
                "myTrails",
                "featuredTrails"
            ],
            "type": "object",
            "properties": {
                "myTrails": {
                    "$ref": "#/definitions/PaginateFeaturedTrailsResponse",
                    "description": ""
                },
                "featuredTrails": {
                    "$ref": "#/definitions/PaginateFeaturedTrailsResponse",
                    "description": ""
                }
            },
            "example": {
                "featuredTrails": {
                    "entries": [
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 0
                        },
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 1
                        },
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 2
                        }
                    ],
                    "pagination": {
                        "resultsPerPage": 20,
                        "nextPageToken": "nextToken"
                    }
                },
                "myTrails": {
                    "entries": [
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 0,
                            "status": "OPEN"
                        },
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 1,
                            "status": "OPEN"
                        },
                        {
                            "images": [
                            ],
                            "name": "Name",
                            "id": 2,
                            "status": "OPEN"
                        }
                    ],
                    "pagination": {
                        "resultsPerPage": 20,
                        "nextPageToken": "nextToken"
                    }
                }
            }
        },
        "Itinerary": {
            "title": "Root Type for Itinerary",
            "description": "Itinerary Object date: IS0-8601   ***PREGUNTAR COMO ES EL MANEJO DE LAS EXP RECOMENDADAS?***",
            "type": "object",
            "properties": {
                "trailId": {
                    "format": "int32",
                    "type": "integer"
                },
                "adult": {
                    "format": "int32",
                    "type": "integer"
                },
                "teens": {
                    "format": "int32",
                    "type": "integer"
                },
                "kids": {
                    "format": "int32",
                    "type": "integer"
                },
                "startTimeStamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "endTimeStamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "fixedPlaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExperiencePart"
                    }
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ItineraryExperience"
                    }
                },
                "recommeded": {
                    "$ref": "#/definitions/ItineraryRecommendsObject",
                    "properties": {
                        "tags": {
                            "type": "array",
                            "items": {

                            }
                        },
                        "experiencies": {
                            "type": "array",
                            "items": {

                            }
                        }
                    }
                },
                "recentlyDeleted": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExperiencePart"
                    }
                }
            },
            "example": {
                "trailId": 0,
                "adult": 0,
                "teens": 0,
                "kids": 0,
                "startTimeStamp": "2020-06-15T23:01:41+00:00",
                "endTimeStamp": "2020-06-15T23:01:41+00:00",
                "fixedPlaces": [
                    {
                        "id": 0,
                        "name": "Name",
                        "topImage": "",
                        "images": [
                            ""
                        ],
                        "lat": 0,
                        "lng": 0,
                        "address": ""
                    }
                ],
                "schedule": [
                    {
                        "position": 0,
                        "datetime": "2020-06-15T23:01:41+00:00",
                        "duration": 3600,
                        "status": "OPEN",
                        "experience": {
                            "id": 0,
                            "name": "Name",
                            "topImage": "",
                            "images": [
                            ],
                            "lat": 0,
                            "lng": 0
                        }
                    },
                    {
                        "position": 1,
                        "datetime": "2020-06-15T23:01:41+00:00",
                        "duration": 3600,
                        "status": "OPEN",
                        "experience": {
                            "id": 0,
                            "name": "Name",
                            "topImage": "",
                            "images": [
                            ],
                            "lat": 0,
                            "lng": 0
                        }
                    }
                ],
                "recommeded": {
                    "tags": [
                        "sodas"
                    ],
                    "experiences": {

                    }
                },
                "recentlyDeleted": [
                    {
                        "id": 0,
                        "name": "Name",
                        "topImage": "",
                        "images": [
                            ""
                        ],
                        "lat": 0,
                        "lng": 0,
                        "address": ""
                    }
                ]
            }
        },
        "SearchFilter": {
            "title": "Root Type for search_filter",
            "description": "Search Filter Object",
            "required": [
                "id",
                "label",
                "type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "MULTIPLE_VALUES",
                        "SELECTED_VALUE",
                        "INCREASE_VALUE",
                        "RANGE_VALUE",
                        ""
                    ],
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "position": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "value": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "label": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "example": {
                "id": "id",
                "type": "MULTIPLE_VALUES",
                "label": "",
                "values": [
                    {
                        "position": 0,
                        "value": 0,
                        "label": "Card Payment"
                    },
                    {
                        "position": 1,
                        "value": 1,
                        "label": "AMEX Payment"
                    }
                ]
            }
        },
        "CreateUserTrailPayload": {
            "title": "Root Type for CreateUserTrailPayload",
            "description": "Create user trail body payload ",
            "required": [
                "experience",
                "name",
                "description"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "collaborators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "experience": {
                    "$ref": "#/definitions/Experience"
                }
            },
            "example": {
                "name": "Name",
                "collaborators": [
                    "email@example.com"
                ],
                "description": "",
                "experience": {
                    "id": 0,
                    "name": "Manuel Antonio, Parque Nacional",
                    "region": "Puntarenas",
                    "locality": "Manuel Antonio",
                    "country": "Costa Rica",
                    "address-line1": "Address",
                    "address-line2": "Address",
                    "address-line3": "Address",
                    "address-line4": "Address",
                    "likes_count": 40,
                    "starred": false,
                    "detail": "Manuel Antonio is the most popular National Park with Ticos. It offers several kilometers of very well maintained trails",
                    "image": "https://2.bp.blogspot.com/-he7gyDcaGdU/WFsfPqaiS9I/AAAAAAAAFzw/pqkGr5OCYikIA-Fsd_C2-FdoKTxVtx5zQCKgB/s1600/IMG_20161221_141133905.jpg",
                    "latitude": 0,
                    "longitude": 0,
                    "nearby_ids": [
                        "naoasodasd909",
                        "ojnsdpgsd-0a",
                        "oasidgja0sdgadg09"
                    ],
                    "related_ids": [
                        "34tdgdsf45645",
                        "qr524524ter-0a",
                        "oasidgjasdfsdfasdfa0sdgadg09"
                    ],
                    "images": [
                        "https://upload.wikimedia.org/wikipedia/commons/0/0e/Pavilion_of_Ciudad_Quesada%2C_Costa_Rica_park.jpg",
                        "https://lh3.googleusercontent.com/proxy/ENtz38Rzl0Vyt-8ehmda7eWOW4bTjTDbntJLv6nChMKwJFr9dOHz9FFw-UveJkj0My5o9GWt4roilVmUh1bkpvYrkE8fsKucmKI2xzXcnxke3ffREm-dWnJXwwyuLrOdiRWA-5CLH9-bLEVDperRdlkQ3OOioKCu5rllRG1b6tz9cHh6VlGU_yZ5Ektw5xbefp77H_gZ2HdaOkOXMnKQTsoF4hXPndSdELHwHPcCjAB1VNcvctz61peXNPxP95ZYcVI3qRFRF7k",
                        "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTn9l50PRnci2bnQBLQqt3dgscfWf3QcKQ8bDdx6MZdF1m6w1j-&usqp=CAU",
                        "https://elperiodicocr.com/wp-content/uploads/2019/07/Feria-del-Agricultor-INDER-1.jpeg"
                    ]
                }
            }
        },
        "PaginateFeaturedTrailsResponse": {
            "title": "Root Type for PaginateTopicsResponse",
            "description": "Topics list response",
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FeaturedTrail"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "description": "Pagination Data"
                }
            },
            "example": {
                "entries": [
                    {
                        "images": [
                        ],
                        "name": "Name",
                        "id": 0,
                        "status": "OPEN"
                    },
                    {
                        "images": [
                        ],
                        "name": "Name",
                        "id": 1,
                        "status": "OPEN"
                    },
                    {
                        "images": [
                        ],
                        "name": "Name",
                        "id": 2,
                        "status": "IN_PROGRESS"
                    }
                ],
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "nextToken"
                }
            }
        },
        "ItineraryExperience": {
            "title": "Root Type for ItineraryExperience",
            "description": "Itinerary experience object",
            "required": [
                "experience",
                "position",
                "status",
                "datetime",
                "duration"
            ],
            "type": "object",
            "properties": {
                "datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "duration": {
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "experience": {
                    "$ref": "#/definitions/ExperiencePart",
                    "properties": {
                        "id": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "topImage": {
                            "type": "string"
                        },
                        "images": {
                            "type": "array",
                            "items": {

                            }
                        },
                        "lat": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "lng": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "position": {
                    "description": "Itinerary position",
                    "type": "integer"
                }
            },
            "example": {
                "position": 0,
                "datetime": "2020-06-15T23:01:41+00:00",
                "duration": 3600,
                "status": "OPEN",
                "experience": {
                    "id": 0,
                    "name": "Name",
                    "topImage": "",
                    "images": [
                    ],
                    "lat": 0,
                    "lng": 0
                }
            }
        },
        "ExperiencePart": {
            "title": "Root Type for ExperiencePart",
            "description": "Most visible or usable experience fields",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "topImage": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lat": {
                    "format": "int32",
                    "type": "integer"
                },
                "lng": {
                    "format": "int32",
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                }
            },
            "example": {
                "id": 0,
                "name": "Name",
                "topImage": "",
                "images": [
                    ""
                ],
                "lat": 0,
                "lng": 0,
                "address": ""
            }
        },
        "PaginateExperiencesPart": {
            "title": "Root Type for PaginateExperiencesPart",
            "description": "Experiences part pagination",
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExperiencePart"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "properties": {
                        "resultsPerPage": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "nextPageToken": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "entries": [
                    {
                        "id": 0,
                        "name": "Name",
                        "topImage": "",
                        "images": [
                            ""
                        ],
                        "lat": 0,
                        "lng": 0,
                        "address": ""
                    },
                    {
                        "id": 1,
                        "name": "Name",
                        "topImage": "",
                        "images": [
                            ""
                        ],
                        "lat": 0,
                        "lng": 0,
                        "address": ""
                    }
                ],
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "nextToken"
                }
            }
        },
        "PaginateDiscoveryTopicResponse": {
            "title": "Root Type for PaginateTopicsResponse",
            "description": "Topics list response",
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "description": "Pagination Data"
                },
                "data": {
                    "$ref": "#/definitions/PaginateExperiencesPart"
                }
            },
            "example": {
                "name": "Name",
                "description": "Description",
                "topicId": 0,
                "data": {
                    "entries": [
                        {
                            "id": 0,
                            "name": "Name",
                            "topImage": "",
                            "images": [
                                ""
                            ],
                            "lat": 0,
                            "lng": 0,
                            "address": ""
                        },
                        {
                            "id": 1,
                            "name": "Name",
                            "topImage": "",
                            "images": [
                                ""
                            ],
                            "lat": 0,
                            "lng": 0,
                            "address": ""
                        }
                    ],
                    "pagination": {
                        "resultsPerPage": 20,
                        "nextPageToken": "nextToken"
                    }
                }
            }
        },
        "Report": {
            "title": "Root Type for CreateReportPayload",
            "description": "Create experience report payload",
            "required": [
                "abuse",
                "affected_value",
                "hygiene",
                "other",
                "personal"
            ],
            "type": "object",
            "properties": {
                "affected_value": {
                    "enum": [
                        "LOW",
                        "MEDIUM",
                        "HIGH"
                    ],
                    "type": "string"
                },
                "abuse": {
                    "type": "boolean"
                },
                "scam": {
                    "type": "boolean"
                },
                "personal": {
                    "type": "boolean"
                },
                "other": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "description": "",
                    "type": "integer"
                },
                "hygiene": {
                    "type": "boolean"
                }
            },
            "example": {
                "id": 0,
                "affected_value": "LOW",
                "abuse": true,
                "scam": false,
                "hygiene": false,
                "personal": true,
                "other": false,
                "comment": "Comment"
            }
        },
        "PaginateReportsResponse": {
            "title": "Root Type for PaginateReportsResponse",
            "description": "Reports pagination",
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "properties": {
                        "resultsPerPage": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "nextPageToken": {
                            "type": "string"
                        }
                    }
                }
            },
            "example": {
                "entries": [
                    {
                        "id": 0,
                        "affected_value": "LOW",
                        "abuse": true,
                        "scam": false,
                        "hiygiene": false,
                        "personal": true,
                        "other": false,
                        "comment": "Comment"
                    },
                    {
                        "id": 1,
                        "affected_value": "LOW",
                        "abuse": true,
                        "scam": false,
                        "hiygiene": false,
                        "personal": true,
                        "other": false,
                        "comment": "Comment"
                    }
                ],
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "nextToken"
                }
            }
        },
        "ItineraryRecommendsObject": {
            "title": "Root Type for ItineraryRecommendsObject",
            "description": "Itinerary Recommends Object",
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "experiences": {
                    "$ref": "#/definitions/PaginateExperiencesPart"
                }
            },
            "example": {
                "tags": [
                    "sodas"
                ],
                "experiences": {
                    "entries": [
                        {
                            "id": 0,
                            "name": "Name",
                            "topImage": "",
                            "images": [
                                ""
                            ],
                            "lat": 0,
                            "lng": 0,
                            "address": ""
                        },
                        {
                            "id": 1,
                            "name": "Name",
                            "topImage": "",
                            "images": [
                                ""
                            ],
                            "lat": 0,
                            "lng": 0,
                            "address": ""
                        }
                    ],
                    "pagination": {
                        "resultsPerPage": 20,
                        "nextPageToken": "nextToken"
                    }
                }
            }
        },
        "CreateItineraryPayload": {
            "title": "Root Type for CreateItineraryPayload",
            "description": "Create itinerary body payload",
            "type": "object",
            "properties": {
                "startDatetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "endDatetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "adults": {
                    "format": "int32",
                    "type": "integer"
                },
                "teens": {
                    "format": "int32",
                    "type": "integer"
                },
                "kids": {
                    "format": "int32",
                    "type": "integer"
                },
                "fixedExperiences": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "example": {
                "startDatetime": "2020-06-15T23:01:41+00:00",
                "endDatetime": "2020-06-15T23:01:41+00:00",
                "adults": 2,
                "teens": 0,
                "kids": 0,
                "fixedExperiences": [
                    0,
                    1
                ]
            }
        },
        "UpdateUserTopicsPayload": {
            "title": "Root Type for UpdateUserTopicsPayload",
            "description": "Update user topics",
            "required": [
                "slectedTopics"
            ],
            "type": "object",
            "properties": {
                "slectedTopics": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "example": {
                "selectedTopics": [
                    0,
                    1
                ]
            }
        },
        "PaginateSearchFiltersResponse": {
            "title": "Root Type for PaginateTopicsResponse",
            "description": "Topics list response",
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchFilter"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/Pagination",
                    "description": "Pagination Data"
                }
            },
            "example": {
                "entries": [
                    {
                        "id": "id",
                        "type": "MULTIPLE_VALUES",
                        "label": "",
                        "values": [
                            {
                                "position": 0,
                                "value": 0,
                                "label": "Card Payment"
                            },
                            {
                                "position": 1,
                                "value": 1,
                                "label": "AMEX Payment"
                            }
                        ]
                    }
                ],
                "pagination": {
                    "resultsPerPage": 20,
                    "nextPageToken": "nextToken"
                }
            }
        }
    },
    "responses": {
        "bad_request": {
            "description": "Api return bad request error",
            "schema": {
                "$ref": "#/definitions/Error"
            },
            "examples": {
                "application/json": {
                    "code": "400",
                    "message": "Bad Request"
                }
            }
        },
        "unauthorized": {
            "description": "HTTP Bearer Authorization Failed",
            "schema": {
                "$ref": "#/definitions/Error"
            },
            "examples": {
                "application/json": {
                    "code": "401",
                    "message": "Unauthorize"
                }
            }
        },
        "forbidden": {
            "description": "Api return bad request error",
            "schema": {
                "$ref": "#/definitions/Error"
            },
            "examples": {
                "application/json": {
                    "code": "400",
                    "message": "Forbidden"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "description": "Logged User Authorization",
            "name": "Authorization",
            "in": "header"
        },
        "FacebookOAuth": {
            "flow": "accessCode",
            "authorizationUrl": "https://www.facebook.com/${_fbGraphVersion}/dialog/oauth",
            "tokenUrl": "https://graph.facebook.com/${_fbGraphVersion}/oauth/access_token",
            "scopes": {

            },
            "type": "oauth2",
            "description": "Allow access to Facebook data using access token"
        },
        "BasicAuth": {
            "type": "basic",
            "description": "Open endpoints basic auth"
        }
    }
}